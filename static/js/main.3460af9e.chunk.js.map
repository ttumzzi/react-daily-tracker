{"version":3,"sources":["component/Date.js","component/Calendar.js","component/Tracker.js","component/TrackerList.js","component/Month.js","component/Direction.js","App.js","serviceWorker.js","index.js"],"names":["DateElem","props","month","date","index","checkDates","id","handleCheck","curDate","classNames","require","classArr","moment","format","push","isAfter","includes","className","onClick","key","Date","m","firstDayInMonth","startOf","get","daysInMonth","lastDayInMOnth","endOf","i","calendar","week","length","slice","map","Day","day","Calendar","this","Component","TrackerNormal","title","src","alt","Setting","handleEdit","handleDelete","handleSettingOpen","role","aria-label","Tracker","settingOpen","state","setState","onDoubleClick","TrackerList","data","content","Month","handleMonth","Direction","alert","style","color","App","handleLoadData","localStorage","getItem","handleSaveData","newItem","setItem","JSON","stringify","handleAddItem","prompt","shortid","concat","generate","curMonth","parseInt","item","filter","d","direction","yearMonth","year","split","newMonth","newData","newDataObjForm","parse","newTitle","window","confirm","thisMonth","savedDataString","savedDataArray","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3460af9e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./Date.css\";\r\n\r\n// coloring if the date is checked.\r\nfunction DateElem(props) {\r\n  const { month, date, index, checkDates, id, handleCheck } = props;\r\n  const curDate = `${month}.${date}`;\r\n  const classNames = require(\"classnames\");\r\n  let classArr = [\"date\"];\r\n\r\n  if (moment().format(\"YYYY.M.D\") === curDate) classArr.push(\"today\");\r\n\r\n  if (date > 0 && moment(curDate).isAfter(moment())) {\r\n    classArr.push(\"invalid-date\");\r\n  }\r\n\r\n  if (checkDates.includes(date)) classArr.push(\"checked-date\");\r\n\r\n  return (\r\n    <button\r\n      className={classNames(classArr)}\r\n      onClick={() => handleCheck(id, date)}\r\n      key={`${date}-${index}`}\r\n    >\r\n      <b>{date === 0 ? \"\" : date}</b>\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Date(props) {\r\n  const { month, checkDates, id, handleCheck } = props;\r\n  const date = [];\r\n  const m = moment(month, \"YYYY.M\");\r\n  const firstDayInMonth = m.startOf(\"month\").get(\"day\");\r\n  const daysInMonth = m.daysInMonth();\r\n  const lastDayInMOnth = m.endOf(\"month\").get(\"day\");\r\n\r\n  for (let i = 0; i < firstDayInMonth; i++) date.push(0);\r\n  for (let i = 0; i < daysInMonth; i++) date.push(i + 1);\r\n  for (let i = 0; i < 6 - lastDayInMOnth; i++) date.push(0);\r\n\r\n  let calendar = [];\r\n  for (let week = 0; week < date.length / 7; week++) {\r\n    calendar.push(\r\n      <div className=\"calendar-row\" key={week}>\r\n        {date.slice(week * 7, week * 7 + 7).map((date, index) => (\r\n          <DateElem\r\n            key={`${date}_${index}`}\r\n            month={month}\r\n            date={date}\r\n            index={index}\r\n            checkDates={checkDates}\r\n            id={id}\r\n            handleCheck={handleCheck}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return calendar;\r\n}\r\n\r\nexport default Date;\r\n","import React, { Component } from \"react\";\r\nimport \"./Calendar.css\";\r\nimport Date from \"./Date\";\r\n\r\nfunction Day() {\r\n  const day = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n  return (\r\n    <div className=\"days\">\r\n      {day.map((day, index) => (\r\n        <div className=\"day\" key={index}>\r\n          {day}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Calendar extends Component {\r\n  render() {\r\n    const { month, checkDates, id, handleCheck } = this.props;\r\n    return (\r\n      <div className=\"calendar-root\">\r\n        <Day />\r\n        <Date\r\n          month={month}\r\n          checkDates={checkDates}\r\n          id={id}\r\n          handleCheck={handleCheck}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { Component } from \"react\";\r\nimport \"./Tracker.css\";\r\nimport Calendar from \"./Calendar\";\r\n\r\nfunction TrackerNormal(props) {\r\n  const { id, month, title, checkDates, handleCheck } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"item-header\">\r\n        <h2>{title}</h2>\r\n        <button className=\"setting-button\">\r\n          <img\r\n            className=\"setting-button-img\"\r\n            src={\"./img/setting.png\"}\r\n            alt=\"setting\"\r\n          />\r\n        </button>\r\n      </div>\r\n      <div className=\"item-calendar\">\r\n        <Calendar\r\n          month={month}\r\n          checkDates={checkDates}\r\n          id={id}\r\n          handleCheck={handleCheck}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Setting(props) {\r\n  const { id, handleEdit, handleDelete, handleSettingOpen } = props;\r\n  const handleItemEdit = () => {\r\n    handleEdit(id);\r\n    handleSettingOpen();\r\n  };\r\n  const handleItemDelete = () => {\r\n    handleDelete(id);\r\n    handleSettingOpen();\r\n  };\r\n  return (\r\n    <div className=\"setting\">\r\n      <button onClick={handleItemEdit}>\r\n        edit title{\" \"}\r\n        <span role=\"img\" aria-label=\"edit\">\r\n          ✏️\r\n        </span>\r\n      </button>\r\n      <button onClick={handleItemDelete}>\r\n        delete{\" \"}\r\n        <span role=\"img\" aria-label=\"edit\">\r\n          🗑️\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Tracker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settingOpen: false\r\n    };\r\n  }\r\n\r\n  handleSettingOpen = () => {\r\n    const settingOpen = this.state.settingOpen;\r\n    this.setState({\r\n      settingOpen: !settingOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      month,\r\n      title,\r\n      checkDates,\r\n      handleCheck,\r\n      handleEdit,\r\n      handleDelete\r\n    } = this.props;\r\n    const settingOpen = this.state.settingOpen;\r\n    return (\r\n      <div className=\"tracker-box\" onDoubleClick={this.handleSettingOpen}>\r\n        {!settingOpen ? (\r\n          <TrackerNormal\r\n            id={id}\r\n            month={month}\r\n            title={title}\r\n            checkDates={checkDates}\r\n            handleCheck={handleCheck}\r\n          />\r\n        ) : (\r\n          <Setting\r\n            id={id}\r\n            handleEdit={handleEdit}\r\n            handleSettingOpen={this.handleSettingOpen}\r\n            handleDelete={handleDelete}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracker;\r\n","import React, { Component } from \"react\";\r\nimport Tracker from \"./Tracker\";\r\nimport \"./TrackerList.css\";\r\n\r\nclass TrackerList extends Component {\r\n  render() {\r\n    const { month, data, handleCheck, handleEdit, handleDelete } = this.props;\r\n    return (\r\n      <div className=\"tracker-list\">\r\n        {data.map(content => (\r\n          <Tracker\r\n            key={content.id}\r\n            month={month}\r\n            title={content.title}\r\n            id={content.id}\r\n            checkDates={content.checkDates}\r\n            handleCheck={handleCheck}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrackerList;\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./Month.css\";\r\n\r\nclass Month extends Component {\r\n  render() {\r\n    const { month, handleMonth } = this.props;\r\n    return (\r\n      <div className=\"month\">\r\n        <button onClick={() => handleMonth(\"-\")}>\r\n          <h2>{\"<\"}</h2>\r\n        </button>\r\n        <h2>{month}</h2>\r\n        {month !== moment().format(\"YYYY.M\") && (\r\n          <button onClick={() => handleMonth(\"+\")}>\r\n            <h2>{\">\"}</h2>\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Month;\r\n","import React from \"react\";\r\nimport \"./Direction.css\";\r\n\r\nfunction Direction(props) {\r\n  const handleDirection = () => {\r\n    alert(\r\n      \"Create a new habit and track it every day.\\nDouble Click on the calendar for editing!😀\"\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"direction\">\r\n      <button className=\"explanation-button\" onClick={handleDirection}>\r\n        <span role=\"img\" aria-label=\"direction\">\r\n          💡\r\n        </span>\r\n      </button>\r\n      <div className=\"direction-elem\">\r\n        <big style={{ color: \"rgb(59, 243, 182)\" }}>●</big>today\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Direction;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TrackerList from \"./component/TrackerList\";\nimport moment from \"moment\";\nimport Month from \"./component/Month\";\nimport Direction from \"./component/Direction\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    const thisMonth = moment().format(\"YYYY.M\");\n    // get Data from local storage\n    const savedDataString = this.handleLoadData(thisMonth);\n    const savedDataArray = JSON.parse(savedDataString);\n    this.state = {\n      month: thisMonth,\n      data: savedDataArray === null ? [] : savedDataArray\n    };\n  }\n\n  handleLoadData = month => {\n    return localStorage.getItem(month);\n  };\n\n  handleSaveData = newItem => {\n    localStorage.setItem(this.state.month, JSON.stringify(newItem));\n  };\n\n  handleAddItem = () => {\n    const newItem = prompt(\"Add new habit to traking 😊\");\n    const shortid = require(\"shortid\");\n    if (newItem !== \"\" && newItem !== null) {\n      const data = this.state.data;\n      this.setState(\n        {\n          data: data.concat({\n            id: shortid.generate(),\n            title: newItem,\n            checkDates: []\n          })\n        },\n        // using updated state right after setState\n        () => {\n          this.handleSaveData(this.state.data);\n        }\n      );\n    }\n  };\n\n  handleCheck = (id, date) => {\n    if (date === 0) return null;\n    const data = this.state.data;\n    const month = this.state.month;\n    const curMonth = moment().format(\"YYYY.M\");\n    const curDate = moment().format(\"D\");\n    if (month === curMonth && date > parseInt(curDate)) return null;\n    else\n      this.setState(\n        {\n          data: data.map(item =>\n            item.id === id\n              ? {\n                  id: item.id,\n                  title: item.title,\n                  checkDates: item.checkDates.includes(date)\n                    ? item.checkDates.filter(d => {\n                        return d !== date;\n                      })\n                    : item.checkDates.concat(date)\n                  // checkDates: Array.from(new Set(item.checkDates.concat(date))),\n                }\n              : item\n          )\n        },\n        () => {\n          if (this.state.data !== data) this.handleSaveData(this.state.data);\n        }\n      );\n  };\n\n  handleMonth = direction => {\n    const yearMonth = this.state.month;\n    const year = parseInt(yearMonth.split(\".\")[0]);\n    const month = parseInt(yearMonth.split(\".\")[1]);\n\n    let newMonth = \"\";\n    if (direction === \"+\")\n      newMonth = month === 12 ? `${year + 1}.1` : `${year}.${month + 1}`;\n    else newMonth = month === 1 ? `${year - 1}.12` : `${year}.${month - 1}`;\n\n    const newData = this.handleLoadData(newMonth);\n    let newDataObjForm = JSON.parse(newData);\n    newDataObjForm = newDataObjForm === null ? [] : newDataObjForm;\n\n    this.setState({\n      month: newMonth,\n      data: this.state.data.slice(0, 0).concat(newDataObjForm)\n    });\n  };\n\n  handleEdit = id => {\n    const newTitle = prompt(\"Write your new title. 😀\");\n    const data = this.state.data;\n    if (newTitle !== \"\" && newTitle !== null) {\n      this.setState(\n        {\n          data: data.map(item =>\n            item.id === id\n              ? {\n                  ...item,\n                  title: newTitle\n                }\n              : item\n          )\n        },\n        () => {\n          this.handleSaveData(this.state.data);\n        }\n      );\n    }\n  };\n\n  handleDelete = id => {\n    const data = this.state.data;\n    const askingDelete = window.confirm(\n      \"Do you really want to delete this habit?😂\"\n    );\n    if (askingDelete) {\n      this.setState(\n        {\n          data: data.filter(item => (item.id !== id ? true : false))\n        },\n        () => {\n          this.handleSaveData(this.state.data);\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"full-page\">\n        <Direction />\n        <div className=\"header\">\n          <h1 className=\"app-title\">Daily tracker</h1>\n          <button className=\"add-item-button\" onClick={this.handleAddItem}>\n            ✔ Add item\n          </button>\n        </div>\n        <Month month={this.state.month} handleMonth={this.handleMonth} />\n        <div className=\"tracker\">\n          <TrackerList\n            month={this.state.month}\n            data={this.state.data}\n            handleCheck={this.handleCheck}\n            handleEdit={this.handleEdit}\n            handleDelete={this.handleDelete}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}