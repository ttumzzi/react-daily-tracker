{"version":3,"sources":["component/Date.js","component/Calendar.js","component/Tracker.js","component/TrackerList.js","component/Month.js","App.js","serviceWorker.js","index.js"],"names":["DateElem","props","n","i","checkDates","includes","className","key","Date","date","firstDayInMonth","moment","startOf","get","daysInMonth","push","calendar","week","length","slice","map","Day","day","index","Calendar","this","Component","CheckButton","id","handleCheck","today","onClick","role","aria-label","TrackerNormal","title","Setting","handleEdit","handleDelete","handleSettingOpen","Tracker","settingOpen","state","setState","onDoubleClick","TrackerList","data","content","checkToday","Month","month","handleMonth","format","App","handleLoadData","localStorage","getItem","handleSaveData","newItem","setItem","JSON","stringify","handleAddItem","prompt","shortid","require","concat","generate","todayDate","item","direction","yearMonth","year","parseInt","split","newMonth","newData","newDataObjForm","parse","newTitle","window","confirm","filter","thisMonth","savedDataString","savedDataArray","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca8a5b89.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./Date.css\";\r\n\r\n// coloring if the date is checked.\r\nfunction DateElem(props) {\r\n  const { n, i, checkDates } = props;\r\n  if (!checkDates.includes(n)) {\r\n    return (\r\n      <div className=\"date\" key={`${n}-${i}`}>\r\n        {n === 0 ? \"\" : n}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"date checked-date\" key={`${n}-${i}`}>\r\n        {n === 0 ? \"\" : n}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Date(props) {\r\n  const checkDates = props.checkDates;\r\n  const date = [];\r\n  const firstDayInMonth = moment()\r\n    .startOf(\"month\")\r\n    .get(\"day\");\r\n  const daysInMonth = moment().daysInMonth();\r\n\r\n  for (let i = 0; i < firstDayInMonth; i++) date.push(0);\r\n  for (let i = 0; i < daysInMonth; i++) date.push(i + 1);\r\n\r\n  let calendar = [];\r\n  for (let week = 0; week < date.length / 7; week++) {\r\n    calendar.push(\r\n      <div className=\"calendar-row\" key={week}>\r\n        {date.slice(week * 7, week * 7 + 7).map((n, i) => (\r\n          <DateElem key={`${n}_${i}`} n={n} i={i} checkDates={checkDates} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return calendar;\r\n}\r\n\r\nexport default Date;\r\n","import React, { Component } from \"react\";\r\nimport \"./Calendar.css\";\r\nimport Date from \"./Date\";\r\n\r\nfunction Day() {\r\n  const day = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n  return (\r\n    <div className=\"days\">\r\n      {day.map((day, index) => (\r\n        <div className=\"day\" key={index}>\r\n          {day}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Calendar extends Component {\r\n  render() {\r\n    const checkDates = this.props.checkDates;\r\n    return (\r\n      <div className=\"calendar-root\">\r\n        <Day />\r\n        <Date checkDates={checkDates} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { Component } from \"react\";\r\nimport \"./Tracker.css\";\r\nimport moment from \"moment\";\r\nimport Calendar from \"./Calendar\";\r\n\r\nfunction CheckButton(props) {\r\n  const { id, checkDates, handleCheck } = props;\r\n  const today = moment().date();\r\n  if (!checkDates.includes(today)) {\r\n    return (\r\n      <button className=\"item-check-button\" onClick={() => handleCheck(id)}>\r\n        <span role=\"img\" aria-label=\"check\">\r\n          ✔️\r\n        </span>\r\n      </button>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction TrackerNormal(props) {\r\n  const { id, title, checkDates, handleCheck } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"item-header\">\r\n        <h2>{title}</h2>\r\n        <CheckButton\r\n          id={id}\r\n          checkDates={checkDates}\r\n          handleCheck={handleCheck}\r\n        />\r\n      </div>\r\n      <div className=\"item-calendar\">\r\n        <Calendar checkDates={checkDates} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Setting(props) {\r\n  const { id, handleEdit, handleDelete, handleSettingOpen } = props;\r\n  const handleItemEdit = () => {\r\n    handleEdit(id);\r\n    handleSettingOpen();\r\n  };\r\n  const handleItemDelete = () => {\r\n    handleDelete(id);\r\n    handleSettingOpen();\r\n  };\r\n  return (\r\n    <div className=\"setting\">\r\n      <button onClick={handleItemEdit}>\r\n        edit title{\" \"}\r\n        <span role=\"img\" aria-label=\"edit\">\r\n          ✏️\r\n        </span>\r\n      </button>\r\n      <button onClick={handleItemDelete}>\r\n        delete{\" \"}\r\n        <span role=\"img\" aria-label=\"edit\">\r\n          🗑️\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Tracker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settingOpen: false\r\n    };\r\n  }\r\n\r\n  handleSettingOpen = () => {\r\n    const settingOpen = this.state.settingOpen;\r\n    this.setState({\r\n      settingOpen: !settingOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      checkDates,\r\n      handleCheck,\r\n      handleEdit,\r\n      handleDelete\r\n    } = this.props;\r\n    const settingOpen = this.state.settingOpen;\r\n    return (\r\n      <div className=\"tracker-box\" onDoubleClick={this.handleSettingOpen}>\r\n        {!settingOpen ? (\r\n          <TrackerNormal\r\n            id={id}\r\n            title={title}\r\n            checkDates={checkDates}\r\n            handleCheck={handleCheck}\r\n          />\r\n        ) : (\r\n          <Setting\r\n            id={id}\r\n            handleEdit={handleEdit}\r\n            handleSettingOpen={this.handleSettingOpen}\r\n            handleDelete={handleDelete}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracker;\r\n","import React, { Component } from \"react\";\r\nimport Tracker from \"./Tracker\";\r\nimport \"./TrackerList.css\";\r\n\r\nclass TrackerList extends Component {\r\n  render() {\r\n    const { data, handleCheck, handleEdit, handleDelete } = this.props;\r\n    return (\r\n      <div className=\"tracker-list\">\r\n        {data.map(content => (\r\n          <Tracker\r\n            key={content.id}\r\n            title={content.title}\r\n            id={content.id}\r\n            checkDates={content.checkDates}\r\n            checkToday={content.checkToday}\r\n            handleCheck={handleCheck}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrackerList;\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./Month.css\";\r\n\r\nclass Month extends Component {\r\n  render() {\r\n    const { month, handleMonth } = this.props;\r\n    return (\r\n      <div className=\"month\">\r\n        <button onClick={() => handleMonth(\"-\")}>\r\n          <h2>{\"<\"}</h2>\r\n        </button>\r\n        <h2>{month}</h2>\r\n        {month !== moment().format(\"YYYY . M\") && (\r\n          <button onClick={() => handleMonth(\"+\")}>\r\n            <h2>{\">\"}</h2>\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Month;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TrackerList from \"./component/TrackerList\";\nimport moment from \"moment\";\nimport Month from \"./component/Month\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    const thisMonth = moment().format(\"YYYY . M\");\n    // get Data from local storage\n    const savedDataString = this.handleLoadData(thisMonth);\n    const savedDataArray = JSON.parse(savedDataString);\n    this.state = {\n      month: thisMonth,\n      data: savedDataArray === null ? [] : savedDataArray\n    };\n  }\n\n  handleLoadData = month => {\n    return localStorage.getItem(month);\n  };\n\n  handleSaveData = newItem => {\n    localStorage.setItem(this.state.month, JSON.stringify(newItem));\n  };\n\n  handleAddItem = () => {\n    const newItem = prompt(\"Add new habit to traking 😊\");\n    const shortid = require(\"shortid\");\n    if (newItem !== \"\" && newItem !== null) {\n      const data = this.state.data;\n      this.setState(\n        {\n          data: data.concat({\n            id: shortid.generate(),\n            title: newItem,\n            checkDates: []\n          })\n        },\n        // using updated state right after setState\n        () => {\n          this.handleSaveData(this.state.data);\n        }\n      );\n    }\n  };\n\n  handleCheck = id => {\n    const todayDate = moment().date();\n    const data = this.state.data;\n\n    this.setState(\n      {\n        data: data.map(item =>\n          item.id === id\n            ? {\n                id: item.id,\n                title: item.title,\n                checkDates: item.checkDates.concat(todayDate)\n              }\n            : item\n        )\n      },\n      () => {\n        this.handleSaveData(this.state.data);\n      }\n    );\n  };\n\n  handleMonth = direction => {\n    const yearMonth = this.state.month;\n    const year = parseInt(yearMonth.split(\".\")[0]);\n    const month = parseInt(yearMonth.split(\".\")[1]);\n\n    let newMonth = \"\";\n    if (direction === \"+\")\n      newMonth = month === 12 ? `${year + 1} . 1` : `${year} . ${month + 1}`;\n    else newMonth = month === 1 ? `${year - 1} . 12` : `${year} . ${month - 1}`;\n\n    const newData = this.handleLoadData(newMonth);\n    let newDataObjForm = JSON.parse(newData);\n    newDataObjForm = newDataObjForm === null ? [] : newDataObjForm;\n\n    this.setState({\n      month: newMonth,\n      data: this.state.data.slice(0, 0).concat(newDataObjForm)\n    });\n  };\n\n  handleEdit = id => {\n    const newTitle = prompt(\"Write your new title. 😀\");\n    const data = this.state.data;\n    if (newTitle !== \"\" && newTitle !== null) {\n      this.setState(\n        {\n          data: data.map(item =>\n            item.id === id\n              ? {\n                  ...item,\n                  title: newTitle\n                }\n              : item\n          )\n        },\n        () => {\n          this.handleSaveData(this.state.data);\n        }\n      );\n    }\n  };\n\n  handleDelete = id => {\n    const data = this.state.data;\n    const askingDelete = window.confirm(\n      \"Do you really want to delete this habit?😂\"\n    );\n    if (askingDelete) {\n      this.setState(\n        {\n          data: data.filter(item => (item.id !== id ? true : false))\n        },\n        () => {\n          this.handleSaveData(this.state.data);\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <h1 className=\"app-title\">Daily tracker</h1>\n          {this.state.month === moment().format(\"YYYY . M\") && (\n            <button className=\"add-item-button\" onClick={this.handleAddItem}>\n              ✔ Add item\n            </button>\n          )}\n        </div>\n        <Month month={this.state.month} handleMonth={this.handleMonth} />\n        <div className=\"tracker\">\n          <TrackerList\n            data={this.state.data}\n            handleCheck={this.handleCheck}\n            handleEdit={this.handleEdit}\n            handleDelete={this.handleDelete}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}