{"version":3,"sources":["component/Date.js","component/Calendar.js","component/Tracker.js","component/TrackerList.js","component/Month.js","component/Direction.js","App.js","serviceWorker.js","index.js"],"names":["DateElem","props","month","date","index","checkDates","startDate","id","handleCheck","curDate","classNames","require","classArr","moment","format","push","includes","className","onClick","key","Date","firstDayInMonth","startOf","get","daysInMonth","i","calendar","week","length","slice","map","Day","day","Calendar","this","Component","TrackerNormal","title","Setting","handleEdit","handleDelete","handleSettingOpen","role","aria-label","Tracker","settingOpen","state","setState","onDoubleClick","TrackerList","data","content","Month","handleMonth","Direction","alert","style","color","App","handleLoadData","localStorage","getItem","handleSaveData","newItem","setItem","JSON","stringify","handleAddItem","prompt","shortid","concat","generate","curMonth","parseInt","item","direction","yearMonth","year","split","newMonth","newData","newDataObjForm","parse","newTitle","window","confirm","filter","thisMonth","savedDataString","savedDataArray","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2e94674.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./Date.css\";\r\n\r\n// coloring if the date is checked.\r\nfunction DateElem(props) {\r\n  const { month, date, index, checkDates, startDate, id, handleCheck } = props;\r\n  const curDate = `${month}.${date}`;\r\n  const classNames = require(\"classnames\");\r\n  let classArr = [\"date\"];\r\n\r\n  if (moment().format(\"YYYY.M.D\") === curDate) {\r\n    classArr.push(\"today\");\r\n  } else if (startDate === curDate) {\r\n    classArr.push(\"start-date\");\r\n  }\r\n  if (checkDates.includes(date)) {\r\n    classArr.push(\"checked-date\");\r\n  }\r\n  return (\r\n    <div\r\n      className={classNames(classArr)}\r\n      onClick={() => handleCheck(id, date)}\r\n      key={`${date}-${index}`}\r\n    >\r\n      <b>{date === 0 ? \"\" : date}</b>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Date(props) {\r\n  const { month, checkDates, startDate, id, handleCheck } = props;\r\n  const date = [];\r\n  const firstDayInMonth = moment()\r\n    .startOf(\"month\")\r\n    .get(\"day\");\r\n  const daysInMonth = moment().daysInMonth();\r\n\r\n  for (let i = 0; i < firstDayInMonth; i++) date.push(0);\r\n  for (let i = 0; i < daysInMonth; i++) date.push(i + 1);\r\n\r\n  let calendar = [];\r\n  for (let week = 0; week < date.length / 7; week++) {\r\n    calendar.push(\r\n      <div className=\"calendar-row\" key={week}>\r\n        {date.slice(week * 7, week * 7 + 7).map((date, index) => (\r\n          <DateElem\r\n            key={`${date}_${index}`}\r\n            month={month}\r\n            date={date}\r\n            index={index}\r\n            checkDates={checkDates}\r\n            startDate={startDate}\r\n            id={id}\r\n            handleCheck={handleCheck}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return calendar;\r\n}\r\n\r\nexport default Date;\r\n","import React, { Component } from \"react\";\r\nimport \"./Calendar.css\";\r\nimport Date from \"./Date\";\r\n\r\nfunction Day() {\r\n  const day = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n  return (\r\n    <div className=\"days\">\r\n      {day.map((day, index) => (\r\n        <div className=\"day\" key={index}>\r\n          {day}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Calendar extends Component {\r\n  render() {\r\n    const { month, checkDates, startDate, id, handleCheck } = this.props;\r\n    return (\r\n      <div className=\"calendar-root\">\r\n        <Day />\r\n        <Date\r\n          month={month}\r\n          checkDates={checkDates}\r\n          startDate={startDate}\r\n          id={id}\r\n          handleCheck={handleCheck}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { Component } from \"react\";\r\nimport \"./Tracker.css\";\r\nimport Calendar from \"./Calendar\";\r\n\r\nfunction TrackerNormal(props) {\r\n  const { id, month, title, checkDates, startDate, handleCheck } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"item-header\">\r\n        <h2>{title}</h2>\r\n      </div>\r\n      <div className=\"item-calendar\">\r\n        <Calendar\r\n          month={month}\r\n          checkDates={checkDates}\r\n          startDate={startDate}\r\n          id={id}\r\n          handleCheck={handleCheck}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Setting(props) {\r\n  const { id, handleEdit, handleDelete, handleSettingOpen } = props;\r\n  const handleItemEdit = () => {\r\n    handleEdit(id);\r\n    handleSettingOpen();\r\n  };\r\n  const handleItemDelete = () => {\r\n    handleDelete(id);\r\n    handleSettingOpen();\r\n  };\r\n  return (\r\n    <div className=\"setting\">\r\n      <button onClick={handleItemEdit}>\r\n        edit title{\" \"}\r\n        <span role=\"img\" aria-label=\"edit\">\r\n          ✏️\r\n        </span>\r\n      </button>\r\n      <button onClick={handleItemDelete}>\r\n        delete{\" \"}\r\n        <span role=\"img\" aria-label=\"edit\">\r\n          🗑️\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Tracker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settingOpen: false\r\n    };\r\n  }\r\n\r\n  handleSettingOpen = () => {\r\n    const settingOpen = this.state.settingOpen;\r\n    this.setState({\r\n      settingOpen: !settingOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      month,\r\n      title,\r\n      checkDates,\r\n      startDate,\r\n      handleCheck,\r\n      handleEdit,\r\n      handleDelete\r\n    } = this.props;\r\n    const settingOpen = this.state.settingOpen;\r\n    return (\r\n      <div className=\"tracker-box\" onDoubleClick={this.handleSettingOpen}>\r\n        {!settingOpen ? (\r\n          <TrackerNormal\r\n            id={id}\r\n            month={month}\r\n            title={title}\r\n            checkDates={checkDates}\r\n            startDate={startDate}\r\n            handleCheck={handleCheck}\r\n          />\r\n        ) : (\r\n          <Setting\r\n            id={id}\r\n            handleEdit={handleEdit}\r\n            handleSettingOpen={this.handleSettingOpen}\r\n            handleDelete={handleDelete}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracker;\r\n","import React, { Component } from \"react\";\r\nimport Tracker from \"./Tracker\";\r\nimport \"./TrackerList.css\";\r\n\r\nclass TrackerList extends Component {\r\n  render() {\r\n    const { month, data, handleCheck, handleEdit, handleDelete } = this.props;\r\n    return (\r\n      <div className=\"tracker-list\">\r\n        {data.map(content => (\r\n          <Tracker\r\n            key={content.id}\r\n            month={month}\r\n            title={content.title}\r\n            id={content.id}\r\n            checkDates={content.checkDates}\r\n            startDate={content.startDate}\r\n            handleCheck={handleCheck}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrackerList;\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./Month.css\";\r\n\r\nclass Month extends Component {\r\n  render() {\r\n    const { month, handleMonth } = this.props;\r\n    return (\r\n      <div className=\"month\">\r\n        <button onClick={() => handleMonth(\"-\")}>\r\n          <h2>{\"<\"}</h2>\r\n        </button>\r\n        <h2>{month}</h2>\r\n        {month !== moment().format(\"YYYY.M\") && (\r\n          <button onClick={() => handleMonth(\"+\")}>\r\n            <h2>{\">\"}</h2>\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Month;\r\n","import React from \"react\";\r\nimport \"./Direction.css\";\r\n\r\nfunction Direction(props) {\r\n  const handleDirection = () => {\r\n    alert(\r\n      \"Create a new habit and track it every day.\\nDouble Click on the calendar for editing!😀\"\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"direction\">\r\n      <button className=\"explanation-button\" onClick={handleDirection}>\r\n        <span role=\"img\" aria-label=\"direction\">\r\n          💡\r\n        </span>\r\n      </button>\r\n      <div className=\"direction-elem\">\r\n        <big style={{ color: \"rgb(255, 0, 170)\" }}>●</big>start date\r\n      </div>\r\n      <div className=\"direction-elem\">\r\n        <big style={{ color: \"rgb(59, 243, 182)\" }}>●</big>today\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Direction;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TrackerList from \"./component/TrackerList\";\nimport moment from \"moment\";\nimport Month from \"./component/Month\";\nimport Direction from \"./component/Direction\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    const thisMonth = moment().format(\"YYYY.M\");\n    // get Data from local storage\n    const savedDataString = this.handleLoadData(thisMonth);\n    const savedDataArray = JSON.parse(savedDataString);\n    this.state = {\n      month: thisMonth,\n      data: savedDataArray === null ? [] : savedDataArray\n    };\n  }\n\n  handleLoadData = month => {\n    return localStorage.getItem(month);\n  };\n\n  handleSaveData = newItem => {\n    localStorage.setItem(this.state.month, JSON.stringify(newItem));\n  };\n\n  handleAddItem = () => {\n    const newItem = prompt(\"Add new habit to traking 😊\");\n    const shortid = require(\"shortid\");\n    if (newItem !== \"\" && newItem !== null) {\n      const data = this.state.data;\n      this.setState(\n        {\n          data: data.concat({\n            id: shortid.generate(),\n            title: newItem,\n            checkDates: [],\n            startDate: moment().format(\"YYYY.M.D\")\n          })\n        },\n        // using updated state right after setState\n        () => {\n          this.handleSaveData(this.state.data);\n        }\n      );\n    }\n  };\n\n  handleCheck = (id, date) => {\n    const data = this.state.data;\n    const month = this.state.month;\n    const curMonth = moment().format(\"YYYY.M\");\n    const curDate = moment().format(\"D\");\n    if (month === curMonth && date > parseInt(curDate)) return null;\n    else\n      this.setState(\n        {\n          data: data.map(item =>\n            item.id === id\n              ? {\n                  id: item.id,\n                  title: item.title,\n                  checkDates: item.checkDates.concat(date),\n                  startDate: item.startDate\n                }\n              : item\n          )\n        },\n        () => {\n          this.handleSaveData(this.state.data);\n        }\n      );\n  };\n\n  handleMonth = direction => {\n    const yearMonth = this.state.month;\n    const year = parseInt(yearMonth.split(\".\")[0]);\n    const month = parseInt(yearMonth.split(\".\")[1]);\n\n    let newMonth = \"\";\n    if (direction === \"+\")\n      newMonth = month === 12 ? `${year + 1}.1` : `${year}.${month + 1}`;\n    else newMonth = month === 1 ? `${year - 1}.12` : `${year}.${month - 1}`;\n\n    const newData = this.handleLoadData(newMonth);\n    let newDataObjForm = JSON.parse(newData);\n    newDataObjForm = newDataObjForm === null ? [] : newDataObjForm;\n\n    this.setState({\n      month: newMonth,\n      data: this.state.data.slice(0, 0).concat(newDataObjForm)\n    });\n  };\n\n  handleEdit = id => {\n    const newTitle = prompt(\"Write your new title. 😀\");\n    const data = this.state.data;\n    if (newTitle !== \"\" && newTitle !== null) {\n      this.setState(\n        {\n          data: data.map(item =>\n            item.id === id\n              ? {\n                  ...item,\n                  title: newTitle\n                }\n              : item\n          )\n        },\n        () => {\n          this.handleSaveData(this.state.data);\n        }\n      );\n    }\n  };\n\n  handleDelete = id => {\n    const data = this.state.data;\n    const askingDelete = window.confirm(\n      \"Do you really want to delete this habit?😂\"\n    );\n    if (askingDelete) {\n      this.setState(\n        {\n          data: data.filter(item => (item.id !== id ? true : false))\n        },\n        () => {\n          this.handleSaveData(this.state.data);\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"full-page\">\n        <Direction />\n        <div className=\"header\">\n          <h1 className=\"app-title\">Daily tracker</h1>\n          {this.state.month === moment().format(\"YYYY.M\") && (\n            <button className=\"add-item-button\" onClick={this.handleAddItem}>\n              ✔ Add item\n            </button>\n          )}\n        </div>\n        <Month month={this.state.month} handleMonth={this.handleMonth} />\n        <div className=\"tracker\">\n          <TrackerList\n            month={this.state.month}\n            data={this.state.data}\n            handleCheck={this.handleCheck}\n            handleEdit={this.handleEdit}\n            handleDelete={this.handleDelete}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}